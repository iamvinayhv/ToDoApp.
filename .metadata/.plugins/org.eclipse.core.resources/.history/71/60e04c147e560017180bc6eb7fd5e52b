package com.bridgelabz.toDoApp.service.serviceImpl;

import java.util.Collections;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.bridgelabz.toDoApp.dao.doaInterface.ToDoDao;
import com.bridgelabz.toDoApp.model.Collaborator;
import com.bridgelabz.toDoApp.model.ToDo;
import com.bridgelabz.toDoApp.model.User;
import com.bridgelabz.toDoApp.service.serviceInterface.ToDoService;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;

@Service
public class ToDoServiceImpl implements ToDoService {
	
	@Autowired
	private ToDoDao toDoDao;

	@Override
	@Transactional
	public boolean addNote(ToDo toDo) {
		
		return toDoDao.addNote(toDo);
	}

	@Override
	@Transactional(readOnly=true)
	public List<ToDo> getNotes(int userId) {

		toDoDao.getNotes(userId);
		
		ListtoDoDao.getSharedNotes(userId);
		
		return null;
	}

	
	
	@Override
	@Transactional
	public int deleteNote(int id) {
		
		return toDoDao.deleteNote(id);
	}

	@Override
	@Transactional
	public boolean updateNote(ToDo toDo) {
		
		return toDoDao.updateNote(toDo);
	}

	@Override
	@Transactional
	public boolean copyToDo(ToDo copy) {
		
		return toDoDao.copyToDo(copy);
	}

	@Override
	@Transactional
	public void update(ToDo toDo) {
		
		toDoDao.update(toDo);
	}

	@Override
	@Transactional
	public boolean collaborator(Collaborator collaborator) {
		
		return toDoDao.collaborator(collaborator);
	}

}
